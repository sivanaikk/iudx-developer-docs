"use strict";(self.webpackChunkiudx_website=self.webpackChunkiudx_website||[]).push([[8977],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return f}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(r),m=o,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return r?n.createElement(f,a(a({ref:t},p),{},{components:r})):n.createElement(f,a({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},98124:function(e,t,r){r.r(t),r.d(t,{contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return p}});var n=r(87462),o=r(63366),i=(r(67294),r(3905)),a=["components"],c={sidebar_position:2},s="Manage Policies",l={unversionedId:"Provider/provider_manage_policies",id:"Provider/provider_manage_policies",isDocsHomePage:!1,title:"Manage Policies",description:"A provider can create, view and delete access policies set for consumers and delegates in the Consumers tab.",source:"@site/docs/Provider/provider_manage_policies.md",sourceDirName:"Provider",slug:"/Provider/provider_manage_policies",permalink:"/docs/next/Provider/provider_manage_policies",editUrl:"https://github.com/datakaveri/iudx-developer-docs/blob/main/docs/Provider/provider_manage_policies.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/next/Provider/provider"},next:{title:"Manage Delegations",permalink:"/docs/next/Provider/provider_manage_delegates"}},p=[],u={toc:p};function d(e){var t=e.components,c=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},u,c,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"manage-policies"},"Manage Policies"),(0,i.kt)("p",null,"A provider can create, view and delete access policies set for consumers and delegates in the Consumers tab."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"View policies set for consumers",src:r(74581).Z}),(0,i.kt)("br",null),"\n",(0,i.kt)("em",{parentName:"p"},"View policies set for consumers")),(0,i.kt)("p",null,"A policy can be set for a consumer for a particular resource group/dataset with a restriction to access type. "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"API Access")," allows the consumer to call the Resource Server APIs (latest, temporal, attribute, complex etc.) on the resource group. "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Subscription Access")," allows the consumer to subscribe to the resource via RabbitMQ."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"File Access")," allows the consumer to download the data in file form in case it is a file resource.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"The policy can only be created if the consumer exists and if the resource group/dataset exists on the IUDX Catalogue"),". An expiry time for the policy can also be set. Once a policy expires, a consumer may not be able to request for tokens for the particular resource."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Create policy",src:r(70949).Z}),(0,i.kt)("br",null),"\n",(0,i.kt)("em",{parentName:"p"},"Create policy")))}d.isMDXComponent=!0},70949:function(e,t,r){t.Z=r.p+"assets/images/create-policy-8e47a42cc3a50f89d44d88f5c4196b64.png"},74581:function(e,t,r){t.Z=r.p+"assets/images/view-pols-fff9bf0f3847613cb8559a834a99ce2c.png"}}]);