"use strict";(self.webpackChunkiudx_website=self.webpackChunkiudx_website||[]).push([[4546],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return h}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),l=u(n),m=a,h=l["".concat(i,".").concat(m)]||l[m]||d[m]||s;return n?r.createElement(h,o(o({ref:t},p),{},{components:n})):r.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[l]="string"==typeof e?e:a,o[1]=c;for(var u=2;u<s;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},23416:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return p}});var r=n(87462),a=n(63366),s=(n(67294),n(3905)),o=["components"],c={sidebar_position:6},i="Data Access through Async APIs",u={unversionedId:"Consumer/consumer_data_access_async",id:"version-5.0.0/Consumer/consumer_data_access_async",isDocsHomePage:!1,title:"Data Access through Async APIs",description:"To use the Async Service, a consumer must request for consent from the provider, obtain a token from IUDX Auth server and then access the Async Resource Access API.",source:"@site/versioned_docs/version-5.0.0/Consumer/consumer_data_access_async.md",sourceDirName:"Consumer",slug:"/Consumer/consumer_data_access_async",permalink:"/docs/Consumer/consumer_data_access_async",editUrl:"https://github.com/datakaveri/iudx-developer-docs/blob/main/versioned_docs/version-5.0.0/Consumer/consumer_data_access_async.md",tags:[],version:"5.0.0",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"version-5.0.0/tutorialSidebar",previous:{title:"Data Access through Subscription",permalink:"/docs/Consumer/consumer_data_access_subscription"},next:{title:"Data Access through File Server",permalink:"/docs/Consumer/consumer_data_access_file_server"}},p=[{value:"Obtaining Access Token",id:"obtaining-access-token",children:[],level:2},{value:"Search using <em>Async API</em>",id:"search-using-async-api",children:[],level:2}],l={toc:p};function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"data-access-through-async-apis"},"Data Access through Async APIs"),(0,s.kt)("p",null,"To use the Async Service, a ",(0,s.kt)("inlineCode",{parentName:"p"},"consumer")," must request for consent from the ",(0,s.kt)("inlineCode",{parentName:"p"},"provider"),", obtain a ",(0,s.kt)("a",{parentName:"p",href:"/docs/Consumer/consumer_obtaining_access_token"},"token")," from IUDX Auth server and then access the ",(0,s.kt)("a",{parentName:"p",href:"https://rs-test.iudx.io/apis#tag/Data-Subscriber"},"Async Resource Access API"),"."),(0,s.kt)("h2",{id:"obtaining-access-token"},"Obtaining Access Token"),(0,s.kt)("p",null,"A ",(0,s.kt)("inlineCode",{parentName:"p"},"consumer")," can obtain a token using the ",(0,s.kt)("a",{parentName:"p",href:"https://authorization.iudx.org.in/apis#operation/post-auth-v1-token"},"Create Token APIs")," with the following request body. Make sure that the appropriate ",(0,s.kt)("inlineCode",{parentName:"p"},"resource"),"id is used to obtain a token."),(0,s.kt)("h2",{id:"search-using-async-api"},"Search using ",(0,s.kt)("em",{parentName:"h2"},"Async API")),(0,s.kt)("p",null,"An ",(0,s.kt)("a",{parentName:"p",href:"https://rs-test.iudx.io/apis#operation/async%20search"},"Async Search")," is used by IUDX Data Consumers for querying a resource using a valid IUDX ",(0,s.kt)("inlineCode",{parentName:"p"},"id"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"temporal")," parameters. Async APIs provide the ability to the ",(0,s.kt)("inlineCode",{parentName:"p"},"consumer")," to query resources using larger temporal period. On accepting the request, the server will respond with a ",(0,s.kt)("inlineCode",{parentName:"p"},"search-id")," using which the ",(0,s.kt)("inlineCode",{parentName:"p"},"consumer")," can check the ",(0,s.kt)("a",{parentName:"p",href:"https://rs-test.iudx.io/apis#operation/async%20search%20status"},"status of the search request"),". Once the search is completed, the ",(0,s.kt)("inlineCode",{parentName:"p"},"consumer")," can download the file specified in the download URL."))}d.isMDXComponent=!0}}]);