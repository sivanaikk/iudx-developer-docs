"use strict";(self.webpackChunkiudx_website=self.webpackChunkiudx_website||[]).push([[9905],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return k}});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),s=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=s(a),u=n,k=m["".concat(p,".").concat(u)]||m[u]||d[u]||o;return a?r.createElement(k,l(l({ref:t},c),{},{components:a})):r.createElement(k,l({ref:t},c))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[m]="string"==typeof e?e:n,l[1]=i;for(var s=2;s<o;s++)l[s]=a[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},13444:function(e,t,a){a.r(t),a.d(t,{contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return c}});var r=a(87462),n=a(63366),o=(a(67294),a(3905)),l=["components"],i={sidebar_position:12},p=void 0,s={unversionedId:"Deployment/Docker Swarm-Based Deployment/IUDX Component Installation/ACL-APD",id:"version-5.0.0/Deployment/Docker Swarm-Based Deployment/IUDX Component Installation/ACL-APD",isDocsHomePage:!1,title:"ACL-APD",description:"Prerequisite:",source:"@site/versioned_docs/version-5.0.0/Deployment/Docker Swarm-Based Deployment/IUDX Component Installation/ACL-APD.md",sourceDirName:"Deployment/Docker Swarm-Based Deployment/IUDX Component Installation",slug:"/Deployment/Docker Swarm-Based Deployment/IUDX Component Installation/ACL-APD",permalink:"/docs/Deployment/Docker Swarm-Based Deployment/IUDX Component Installation/ACL-APD",editUrl:"https://github.com/datakaveri/iudx-developer-docs/blob/main/versioned_docs/version-5.0.0/Deployment/Docker Swarm-Based Deployment/IUDX Component Installation/ACL-APD.md",tags:[],version:"5.0.0",sidebarPosition:12,frontMatter:{sidebar_position:12},sidebar:"version-5.0.0/tutorialSidebar",previous:{title:"AAA Server",permalink:"/docs/Deployment/Docker Swarm-Based Deployment/IUDX Component Installation/AAA Server"},next:{title:"Catalogue-Server",permalink:"/docs/Deployment/Docker Swarm-Based Deployment/IUDX Component Installation/Catalogue-Server"}},c=[{value:"Prerequisite:",id:"prerequisite",children:[],level:3},{value:"Installation:",id:"installation",children:[],level:3},{value:"Notes",id:"notes",children:[],level:3}],m={toc:c};function d(e){var t=e.components,a=(0,n.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"prerequisite"},"Prerequisite:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create a acl-apd trustee keycloak user"),(0,o.kt)("li",{parentName:"ol"},"Register trustee user against AAA server using cos admin credentials and get client id, and client secret of the trustee user to use in  acl adp config file"),(0,o.kt)("li",{parentName:"ol"},"Flyway migration ")),(0,o.kt)("h3",{id:"installation"},"Installation:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Navigate to the directory:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"cd iudx-deployment/Docker-Swarm-deployment/single-node/acl-apd/\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Assign the node label if not assigned during swarm installation:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"docker node update --label-add acl-apd-node=true <node_name>\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Make a copy of the sample secrets directory by running the following command:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"cp -r example-secrets/secrets .\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Secrets directory after generation of secret files"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"secrets/\n\u251c\u2500\u2500 config.json\n\u2514\u2500\u2500 .apd.env\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Substitute appropriate values using commands mentioned in config files.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Define appropriate values of resources:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"CPU requests and limits"),(0,o.kt)("li",{parentName:"ul"},"RAM requests and limits"),(0,o.kt)("li",{parentName:"ul"},"PID limit")),(0,o.kt)("p",{parentName:"li"},"in ",(0,o.kt)("inlineCode",{parentName:"p"},"acl-apd-stack.resources.yaml")," as shown in the sample file ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/datakaveri/iudx-deployment/blob/master/Docker-Swarm-deployment/single-node/acl-apd/example-acl-apd-server-stack.resources.yaml"},"example-acl-apd-server-stack.resources.yaml")),"."))),(0,o.kt)("ol",{start:7},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"To install GIS server stack, use the following command:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"cp example-acl-apd-stack.resources.yaml acl-apd-stack.resources.yaml\n\ndocker stack deploy -c acl-apd-stack.yaml -c acl-apd-stack.resources.yaml acl-apd\n")))),(0,o.kt)("h3",{id:"notes"},"Notes"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"The upstream code for acl-apd server is available at ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/datakaveri/iudx-acl-apd"},"here")),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"If you need to expose the HTTP ports or have custom stack configuration( see ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/datakaveri/iudx-deployment/blob/master/Docker-Swarm-deployment/single-node/acl-apd/example-acl-apd-server-stack.resources.yaml"},"here"))," for example configuration of 'acl-apd-stack.custom.yaml' file) and bring up like as follows."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"docker stack deploy -c acl-apd-stack.yaml -c acl-apd-stack.resources.yaml -c acl-apd-stack.custom.yaml acl-apd\n")))))}d.isMDXComponent=!0}}]);