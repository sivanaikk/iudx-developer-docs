"use strict";(self.webpackChunkiudx_website=self.webpackChunkiudx_website||[]).push([[6637],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return h}});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),l=p(t),m=i,h=l["".concat(c,".").concat(m)]||l[m]||d[m]||a;return t?r.createElement(h,o(o({ref:n},u),{},{components:t})):r.createElement(h,o({ref:n},u))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[l]="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},80902:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var r=t(87462),i=t(63366),a=(t(67294),t(3905)),o=["components"],s={sidebar_position:5},c="Data Access through Subscription",p={unversionedId:"Consumer/consumer_data_access_subscription",id:"version-5.0.0/Consumer/consumer_data_access_subscription",isDocsHomePage:!1,title:"Data Access through Subscription",description:"To register subscription, a user must request for consent from the provider, obtain a token from IUDX Auth server and then access the Subscription API.",source:"@site/versioned_docs/version-5.0.0/Consumer/consumer_data_access_subscription.md",sourceDirName:"Consumer",slug:"/Consumer/consumer_data_access_subscription",permalink:"/docs/Consumer/consumer_data_access_subscription",editUrl:"https://github.com/datakaveri/iudx-developer-docs/blob/main/versioned_docs/version-5.0.0/Consumer/consumer_data_access_subscription.md",tags:[],version:"5.0.0",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"version-5.0.0/tutorialSidebar",previous:{title:"Data Access through APIs",permalink:"/docs/Consumer/consumer_data_access_APIs"},next:{title:"Data Access through Async APIs",permalink:"/docs/Consumer/consumer_data_access_async"}},u=[{value:"Obtaining token to <em>Subscribe</em> a resource",id:"obtaining-token-to-subscribe-a-resource",children:[],level:3},{value:"Creating a new subscription",id:"creating-a-new-subscription",children:[],level:3},{value:"Obtaining token to refresh an existing <em>Subscription</em> of a resource",id:"obtaining-token-to-refresh-an-existing-subscription-of-a-resource",children:[],level:3},{value:"Refreshing a subscription",id:"refreshing-a-subscription",children:[],level:3},{value:"Adding a new resource to an existing subscription",id:"adding-a-new-resource-to-an-existing-subscription",children:[],level:3},{value:"Deleting a subscription",id:"deleting-a-subscription",children:[],level:3},{value:"Reset Streaming User Password",id:"reset-streaming-user-password",children:[],level:3}],l={toc:u};function d(e){var n=e.components,t=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"data-access-through-subscription"},"Data Access through Subscription"),(0,a.kt)("p",null,"To register subscription, a user must request for consent from the ",(0,a.kt)("inlineCode",{parentName:"p"},"provider"),", obtain a ",(0,a.kt)("a",{parentName:"p",href:"/docs/Consumer/consumer_obtaining_access_token"},"token")," from IUDX Auth server and then access the ",(0,a.kt)("a",{parentName:"p",href:"https://rs-test.iudx.io/apis#tag/Data-Subscriber"},"Subscription API"),"."),(0,a.kt)("h3",{id:"obtaining-token-to-subscribe-a-resource"},"Obtaining token to ",(0,a.kt)("em",{parentName:"h3"},"Subscribe")," a resource"),(0,a.kt)("p",null,"A ",(0,a.kt)("inlineCode",{parentName:"p"},"consumer")," can obtain a token using the ",(0,a.kt)("a",{parentName:"p",href:"https://authorization.iudx.org.in/apis#operation/post-auth-v1-token"},"Create Token APIs")," with the following request body. Make sure that the appropriate ",(0,a.kt)("inlineCode",{parentName:"p"},"resource")," (or) ",(0,a.kt)("inlineCode",{parentName:"p"},"resource_group")," id is used to obtain a token."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Example For a subscription at a resource level")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "itemId": "datakaveri.org/04a15c9960ffda227e9546f3f46e629e1fe4132b/rs.iudx.org.in/pune-env-aqm/184ba502-22a8-ad15-a8f1-c966cd3aa7a7",\n  "itemType": "resource",\n  "role": "consumer"\n}\n')),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Example For a subscription at a resource group level")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "itemId": "datakaveri.org/04a15c9960ffda227e9546f3f46e629e1fe4132b/rs.iudx.org.in/pune-env-aqm",\n  "itemType": "resource_group",\n  "role": "consumer"\n}\n')),(0,a.kt)("p",null,"It is to be noted that unless an explicit ",(0,a.kt)("inlineCode",{parentName:"p"},"policy")," for subscription is specified by the ",(0,a.kt)("inlineCode",{parentName:"p"},"Provider")," in the ",(0,a.kt)("inlineCode",{parentName:"p"},"IUDX Authorisation Server")," a  ",(0,a.kt)("inlineCode",{parentName:"p"},"consumer")," will not obtain any access token."),(0,a.kt)("h3",{id:"creating-a-new-subscription"},"Creating a new subscription"),(0,a.kt)("p",null,"A consumer can use the ",(0,a.kt)("a",{parentName:"p",href:"https://rs-test.iudx.io/apis#operation/createastreamingsubscription"},"Subscription APIs")," to register a new subscription. On registration, information about the streaming server which includes ",(0,a.kt)("inlineCode",{parentName:"p"},"URL"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"port"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"vHost")," along with ",(0,a.kt)("inlineCode",{parentName:"p"},"subscription-id"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"username")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"apiKey")," will be shared. Using the above information a consumer can connect to the streaming server to get the requested data as a ",(0,a.kt)("inlineCode",{parentName:"p"},"stream"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"import pika\nimport urllib.parse\n\nusername = '15c7506f-c800-48d6-adeb-0542b03947c6' #change this to your user name\npassword = 'u-Tdy3g_ToeQikHfnovjMA' #change this to your password.\nhost = 'localhost'\nport = 49153\nvhost = 'IUDX'\nqueue_name = '15c7506f-c800-48d6-adeb-0542b03947c6/itms-application' #change this to your queue-name (id)\nencoded_username = urllib.parse.quote_plus(username)\n\nconnection = pika.BlockingConnection(\n    pika.URLParameters(f'amqp://{encoded_username}:{password}@{host}:{port}/{vhost}'))\n\nchannel = connection.channel()\n\nprint(' [*] Waiting for data. To exit press CTRL+C')\n\n\ndef callback(ch, method, properties, body):\n    print(\" [x] %r\" % body)\n\nchannel.basic_consume(\n    queue=queue_name, on_message_callback=callback, auto_ack=True)\n\nchannel.start_consuming()\n\n")),(0,a.kt)("h3",{id:"obtaining-token-to-refresh-an-existing-subscription-of-a-resource"},"Obtaining token to refresh an existing ",(0,a.kt)("em",{parentName:"h3"},"Subscription")," of a resource"),(0,a.kt)("p",null,"A ",(0,a.kt)("inlineCode",{parentName:"p"},"consumer")," can obtain a token to refresh an existing subscription using the same approach as mention in Obtaining token to ",(0,a.kt)("em",{parentName:"p"},"Subscribe")," a resource. "),(0,a.kt)("h3",{id:"refreshing-a-subscription"},"Refreshing a subscription"),(0,a.kt)("p",null,"In order to keep the subscription open and live, ",(0,a.kt)("inlineCode",{parentName:"p"},"consumer")," should call the ",(0,a.kt)("a",{parentName:"p",href:"https://rs-test.iudx.io/apis#operation/updatestreamingsubscription"},"Refresh Subscription API")," every 12 hours until policy expiry. On failure to do so, the access to subscription will be revoked. A ",(0,a.kt)("inlineCode",{parentName:"p"},"consumer")," should then use the ",(0,a.kt)("a",{parentName:"p",href:"https://rs-test.iudx.io/apis#operation/appendstreamingsubscription"},"Append Subscription API")," to restart the subscription."),(0,a.kt)("h3",{id:"adding-a-new-resource-to-an-existing-subscription"},"Adding a new resource to an existing subscription"),(0,a.kt)("p",null,"A ",(0,a.kt)("inlineCode",{parentName:"p"},"consumer")," can use the ",(0,a.kt)("a",{parentName:"p",href:"https://rs-test.iudx.io/apis#operation/appendstreamingsubscription"},"Append Subscription API")," to add new resources to an existing subscription. This will make the consumer to receive more than one resource in the same stream. "),(0,a.kt)("p",null,"Note: A ",(0,a.kt)("inlineCode",{parentName:"p"},"resource")," can be differentiated using the ",(0,a.kt)("inlineCode",{parentName:"p"},"id")," available in the data packet. "),(0,a.kt)("h3",{id:"deleting-a-subscription"},"Deleting a subscription"),(0,a.kt)("p",null,"A ",(0,a.kt)("inlineCode",{parentName:"p"},"consumer")," can use the ",(0,a.kt)("a",{parentName:"p",href:"https://rs-test.iudx.io/apis#operation/deleteasubscription"},"Delete Subscription API")," to delete a subscription. This will delete the subscription queue and all existing resources streamed through the queue will be inaccessible."),(0,a.kt)("h3",{id:"reset-streaming-user-password"},"Reset Streaming User Password"),(0,a.kt)("p",null,"A ",(0,a.kt)("inlineCode",{parentName:"p"},"consumer")," can reset the password given to them by the ",(0,a.kt)("inlineCode",{parentName:"p"},"streaming server")," using the ",(0,a.kt)("a",{parentName:"p",href:"https://rs-test.iudx.io/apis#operation/resetPassword"},"Reset Streaming Password API"),". This change will reset all active connections and a ",(0,a.kt)("inlineCode",{parentName:"p"},"consumer")," should restart their ",(0,a.kt)("inlineCode",{parentName:"p"},"client applications")," accordingly."))}d.isMDXComponent=!0}}]);